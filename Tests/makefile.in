srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@

builddir=@builddir@
top_builddir=@top_builddir@

testFiles=three.sis hello.sis 8queens.sis bubble.sis quicksort.sis crypto.sis fromC.sis

localFiles= \
	${testFiles:.sis=.exe} ${testFiles:.sis=.out} ${testFiles:.sis=.dif} ${testFiles:.sis=.out3} ${testFiles:.sis=.dif3} 

.PRECIOUS: ${localFiles}

include $(top_builddir)/Include/makefile.inc

SISALC=${bindir}/sisalc

# These rules can't be used with separate build directories due to problem
# with sisalc which ignores -o parameter when building fromC.o and puts it
# in the source directory (-o for final executable works fine, though).
#
#fromC.exe: fromC.o fromCdriver.c
#	$(SISALC) -o $@ $^ -forC
#
#fromC.o: fromC.sis
#	$(SISALC) $< -w -c -forC

fromC.exe: fromC.sis fromCdriver.c
	$(SISALC) -o $@ -w -forC $^

%.exe: %.sis
	$(SISALC) -w $< -o $@

# Test binaries must be prefixed with $(builddir) to run properly when
# current directory is not included in the PATH (either by name or as '.').

%.out: %.exe
	$(RM) $@
	$(builddir)/$< < $(srcdir)/${@:.out=.in} 2>&1 | tail -n +2 > $@

%.dif: %.out
	$(DIFF) $< $(srcdir)/${<:.out=.ans}

%.out3: %.exe
	$(RM) $@
	$(builddir)/$< -w3 < $(srcdir)/${@:.out3=.in} 2>&1 | tail -n +2 > $@

%.dif3: %.out3
	$(DIFF) $< $(srcdir)/${<:.out3=.ans}

clean:
	$(RM) ${localFiles} fromC.o

answers:
	for root in ${testFiles:.sis=.}; do $(RM) $$root'ans'; $(MAKE) $$root'out'; mv $$root'out' $$root'ans'; done
